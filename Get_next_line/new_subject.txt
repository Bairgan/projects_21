Имя функции get_next_line
Прототип char * get_next_line (int fd);
Включите файлы get_next_line.c, get_next_line_utils.c,
get_next_line.h
Параметры Файловый дескриптор для чтения
Возвращаемое значение
	Строка чтения: правильное поведение
	NULL: больше нечего читать или произошла ошибка
Внешние функции. 
	читать, malloc, бесплатно
Описание
	 Напишите функцию, которая возвращает строку, прочитанную из файлового дескриптора.

Вызов функции get_next_line в цикле позволит вам читать текст, доступный в файловом дескрипторе, по одной строке за раз до его конца.
• Ваша функция должна возвращать только что прочитанную строку. Если читать больше нечего или произошла ошибка, он должен вернуть NULL.
• Убедитесь, что ваша функция хорошо себя ведет при чтении из файла и при чтении из стандартного ввода.
• libft не разрешена для этого проекта. Вы должны добавить файл get_next_line_utils.c, который будет содержать функции, необходимые для работы get_next_line.
• Ваша программа должна компилироваться с флагом -D BUFFER_SIZE = xx, который будет использоваться в качестве размера буфера для вызовов чтения в вашей get_next_line. Это значение будет изменено вашими оценщиками и муленеткой.
• Программа будет составлена ​​таким образом:
gcc -Wall -Wextra -Werror -D BUFFER_SIZE = 42 <файлы> .c.
• Ваше чтение должно использовать BUFFER_SIZE, определенный во время компиляции, для чтения из файла или из стандартного ввода. Это значение будет изменено во время оценки в целях тестирования.
• В заголовочном файле get_next_line.h должен быть как минимум прототип функции get_next_line

Ваша функция все еще работает, если значение BUFFER_SIZE равно 9999? А если значение BUFFER_SIZE равно 1? А 10000000? Ты знаешь почему?
Вы должны стараться читать как можно меньше при каждом вызове get_next_line. Если вы встретили новую строку, вам нужно вернуть текущую строку. Не читайте файл целиком, а затем обрабатывайте каждую строку.
Не сдавайте свой проект без тестирования. Есть много тестов, которые нужно запустить, охватите свои базы. Попробуйте прочитать из файла, из перенаправления, из стандартного ввода. Как ваша программа ведет себя, когда вы отправляете новую строку в стандартный вывод? А CTRL-D?

• lseek - недопустимая функция. Чтение файла необходимо производить только один раз.
• Мы считаем, что get_next_line имеет неопределенное поведение, если между двумя вызовами
тот же файловый дескриптор переключается на другой файл перед чтением всего из
первый fd.
• Наконец, мы считаем, что get_next_line имеет неопределенное поведение при чтении из
двоичный файл. Однако при желании вы можете сделать такое поведение последовательным.
• Глобальные переменные запрещены.
• Важно: вы всегда должны возвращать прочитанную строку, за которой следует '\ n', если вы не достигли конца файла, а не '\ n'.

При записи в итоговую char *line нужно маллочить len + 2. Потом копировать нужную строку до /n. Если встретилось /n - копировать его тоже, а после - терминальный символ. Если не встретилось, просто ставить конец строки
