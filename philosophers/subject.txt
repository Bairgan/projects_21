Обязательная часть
Вам нужно будет написать одну программу для обязательной части и одну для бонусной части, но они будут иметь одни и те же основные правила:
• Этот проект должен быть закодирован на C, в соответствии с Нормой. Любая утечка, сбой, неопределенное поведение или ошибка нормы означают 0 для проекта.
• Один или несколько философов сидят за круглым столом и занимаются одним из трех дел:
есть, думать или спать.
• Во время еды они не думают и не спят, во время сна они не едят и не думают и, конечно, во время мыслей они не едят и не спят.
• Философы сидят за круглым столом с большой тарелкой спагетти в центре.
• На столе несколько вилок.
• Поскольку спагетти трудно подавать и есть одной вилкой, предполагается, что философ должен есть двумя вилками, по одной на каждую руку.
• Философы никогда не должны голодать.
• Каждому философу нужно есть.
• Философы не разговаривают друг с другом.
• Философы не знают, когда умрет другой философ.
• Каждый раз, когда философ заканчивает есть, он роняет вилки и начинает спать.
• Когда философ заснет, он начнет думать.
• Симуляция останавливается, когда умирает философ.
• Каждая программа должна иметь одинаковые параметры: количество_философов время_до_смерти время_до_поедания время_до_сна [число_из_раз_каждого_философа_должен_поесть]
◦ number_of_philosophers: количество философов, а также количество разветвлений
◦ time_to_die: в миллисекундах, если философ не начнет есть «time_to_die» через миллисекунды после начала последнего приема пищи или начала симуляции, он умрет
◦ time_to_eat: измеряется в миллисекундах и представляет собой время, которое требуется философу, чтобы
есть. В течение этого времени ему нужно будет держать две вилки.
◦ time_to_sleep: указывается в миллисекундах и представляет собой время, которое философ потратит
спать.
◦ number_of_times_each_philosopher_must_eat: аргумент является необязательным, если все философы съедят хотя бы «number_of_times_each_philosopher_must_eat», симуляция остановится. Если не указано, симуляция остановится только при смерти философа.
• Каждому философу должно быть присвоено число от 1 до «number_of_philosophers».
• Философ номер 1 находится рядом с философом номер 'number_of_philosophers'.
Любой другой философ с номером N сидит между философом N - 1 и философом N + 1.
• Любое изменение статуса философа должно быть записано следующим образом (с заменой X на номер философа и timestamp_in_ms на текущую временную метку в миллисекундах)
◦ timestamp_in_ms X сделал ответвление
◦ timestamp_in_ms X ест
◦ timestamp_in_ms X спит
◦ timestamp_in_ms X думает
◦ timestamp_in_ms X умер
• Напечатанный статус не должен путаться или переплетаться со статусом другого философа.
• У вас не может быть больше 10 мс между смертью философа и моментом, когда он напечатает свою смерть.
• Опять же, философы должны избегать смерти!


Название программы: Фило
Сдать файлы: philo/
Makefile: да
Аргументы: количество_философов время_умереть время_есть
time_to_sleep [number_of_times_each_philosopher_must_eat]
Внешние функции: memset, printf, malloc, free, write, usleep, gettimeofday, pthread_create, pthread_detach, pthread_join, pthread_mutex_init, pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock
Авторизация Libft: Нет
Описание: философ с потоками и мьютексом

В этой версии особые правила:
• Одна развилка между каждым философом, поэтому, если это несколько философов, будет разветвление справа и слева от каждого философа.
• Чтобы философы не дублировали разветвления, вы должны защитить состояние разветвлений с помощью мьютекса для каждого из них.
• Каждый философ должен быть нитью.



BONUS
Название программы: philo_bonus
Сдать файлы: philo_bonus/
Makefile: да
Аргументы: количество_философов время_умереть время_есть
time_to_sleep [number_of_times_each_philosopher_must_eat]
Внешние функции: memset, printf, malloc, free, write, fork, kill, exit, pthread_create, pthread_detach, pthread_join, usleep, gettimeofday, waitpid, sem_open, sem_close, sem_post, sem_wait, sem_unlink
Авторизация Libft: Нет
Описание: философ с процессами и семафором

В этой версии особые правила:
• Все вилки находятся в середине стола.
• У них нет состояний в памяти, но количество доступных ответвлений представлено семафором.
• Каждый философ должен быть процессом, а главный процесс не должен быть философом.